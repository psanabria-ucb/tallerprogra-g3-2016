package bo.edu.ucbcba.hotel.view;

import bo.edu.ucbcba.hotel.controller.RoomController;
import bo.edu.ucbcba.hotel.model.Rooms;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

/**
 * Created by Gabo on 29-May-16.
 */
public class InventoryForm extends JDialog {
    private JPanel InventoryPanel;
    private JCheckBox TelfcheckBox;
    private JCheckBox LivingcheckBox;
    private JCheckBox KitchencheckBox;
    private JCheckBox AdornoscheckBox;
    private JCheckBox MiniBarcheckBox;
    private JCheckBox DeskcheckBox;
    private JButton salirButton;
    private JLabel dialogTitle;
    private RoomController roomController;

    InventoryForm(JDialog parent, int n) {
        super(parent, "Room Inventory", true);
        setContentPane(InventoryPanel);
        roomController = new RoomController();
        setBounds(500, 200, 360, 300);
        dialogTitle.setText("Room " + n + " inventory");
        salirButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
        populateInfo(n);
          TelfcheckBox.setEnabled(false);
          LivingcheckBox.setEnabled(false);
          KitchencheckBox.setEnabled(false);
          AdornoscheckBox.setEnabled(false);
          MiniBarcheckBox.setEnabled(false);
          DeskcheckBox.setEnabled(false);

    }

    public void populateInfo(int n) {
        List<Rooms> roomsList = RoomController.getRoom(n);
        for (Rooms s : roomsList) {
            if (s.isPhone())
                TelfcheckBox.setSelected(true);
            if (s.isKitchenAccesories())
                KitchencheckBox.setSelected(true);
            if (s.isLiving())
                LivingcheckBox.setSelected(true);
            if (s.isDesk())
                DeskcheckBox.setSelected(true);
            if (s.isOrnaments())
                AdornoscheckBox.setSelected(true);
            if (s.isMinibar())
                MiniBarcheckBox.setSelected(true);
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        InventoryPanel = new JPanel();
        InventoryPanel.setLayout(new GridLayoutManager(8, 3, new Insets(20, 10, 10, 20), -1, -1));
        dialogTitle = new JLabel();
        dialogTitle.setText("Room Number:");
        InventoryPanel.add(dialogTitle, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        InventoryPanel.add(spacer1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Telephone");
        InventoryPanel.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText(" Living Room Set");
        InventoryPanel.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        TelfcheckBox = new JCheckBox();
        TelfcheckBox.setText("");
        InventoryPanel.add(TelfcheckBox, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        LivingcheckBox = new JCheckBox();
        LivingcheckBox.setText("");
        InventoryPanel.add(LivingcheckBox, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Desktop");
        InventoryPanel.add(label3, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        MiniBarcheckBox = new JCheckBox();
        MiniBarcheckBox.setText("");
        InventoryPanel.add(MiniBarcheckBox, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Mini Bar");
        InventoryPanel.add(label4, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        AdornoscheckBox = new JCheckBox();
        AdornoscheckBox.setText("");
        InventoryPanel.add(AdornoscheckBox, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("Decoration");
        InventoryPanel.add(label5, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        KitchencheckBox = new JCheckBox();
        KitchencheckBox.setText("");
        InventoryPanel.add(KitchencheckBox, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label6 = new JLabel();
        label6.setText("Kitchen Accessories");
        InventoryPanel.add(label6, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        InventoryPanel.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        DeskcheckBox = new JCheckBox();
        DeskcheckBox.setText("");
        InventoryPanel.add(DeskcheckBox, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        salirButton = new JButton();
        salirButton.setText("Salir");
        InventoryPanel.add(salirButton, new GridConstraints(7, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return InventoryPanel;
    }
}
