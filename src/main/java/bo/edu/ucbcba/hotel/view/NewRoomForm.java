package bo.edu.ucbcba.hotel.view;

import  bo.edu.ucbcba.hotel.exceptions.ValidationException;
import bo.edu.ucbcba.hotel.controller.RoomController;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.event.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by Gabo on 15-May-16.
 */
public class NewRoomForm extends JDialog {
    private JPanel NewRoomForm;
    private JComboBox RoomType;
    private JComboBox RoomView;

    private JButton guardarButton;
    private JButton cancelarButton;

    private JLabel telefonoLabel;
    private JLabel juegoDeLivingLabel;
    private JLabel accesorisoDeCocinaLabel;
    private JLabel adornosLabel;
    private JLabel miniBarLabel;
    private JLabel escritorioLabel;
    private JCheckBox TelfcheckBox;
    private JCheckBox LivingcheckBox;
    private JCheckBox KitchencheckBox;
    private JCheckBox AdornoscheckBox;
    private JCheckBox MiniBarcheckBox;
    private JCheckBox DeskcheckBox;
    private RoomController roomController;
    private boolean availability = true;

    public NewRoomForm(JDialog parent) {
        super(parent, "New Room", true);
        setContentPane(NewRoomForm);
        setSize(600, 400);
        setBounds(400, 150, 600, 400);
        RoomType.addItem("Simple");
        RoomType.addItem("Doble");
        RoomType.addItem("Presidencial");
        RoomType.addItem("Deluxe");

        RoomView.addItem("Playa");
        RoomView.addItem("Ciudad");
        RoomView.addItem("Jardines");
        RoomView.addItem("Canchas");
        roomController = new RoomController();
        cancelarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cancel();
            }
        });
        guardarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                saveRoom();
            }
        });
    }

    private void saveRoom() {

        try {
            roomController.create(RoomType.getSelectedItem().toString(), RoomView.getSelectedItem().toString(),
                    availability, TelfcheckBox.isSelected(), LivingcheckBox.isSelected(), KitchencheckBox.isSelected(),
                    MiniBarcheckBox.isSelected(), DeskcheckBox.isSelected(), AdornoscheckBox.isSelected());
        } catch (ValidationException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Format error", JOptionPane.ERROR_MESSAGE);
        }

        JOptionPane.showMessageDialog(this, "Room created successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        cancel();
    }

    private void cancel() {
        setVisible(false);
        dispose();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        NewRoomForm = new JPanel();
        NewRoomForm.setLayout(new GridLayoutManager(7, 7, new Insets(10, 10, 10, 10), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Tipo De Habitacion");
        NewRoomForm.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Vista");
        NewRoomForm.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Inventario");
        NewRoomForm.add(label3, new GridConstraints(3, 0, 3, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        NewRoomForm.add(spacer1, new GridConstraints(1, 1, 1, 5, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        RoomType = new JComboBox();
        NewRoomForm.add(RoomType, new GridConstraints(0, 1, 1, 5, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        RoomView = new JComboBox();
        NewRoomForm.add(RoomView, new GridConstraints(2, 1, 1, 5, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        telefonoLabel = new JLabel();
        telefonoLabel.setText("Telefono");
        NewRoomForm.add(telefonoLabel, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(107, 16), null, 0, false));
        juegoDeLivingLabel = new JLabel();
        juegoDeLivingLabel.setText("Juego de Living");
        NewRoomForm.add(juegoDeLivingLabel, new GridConstraints(4, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(107, 16), null, 0, false));
        accesorisoDeCocinaLabel = new JLabel();
        accesorisoDeCocinaLabel.setText("Accesoriso de Cocina");
        NewRoomForm.add(accesorisoDeCocinaLabel, new GridConstraints(5, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(107, 16), null, 0, false));
        miniBarLabel = new JLabel();
        miniBarLabel.setText("Mini Bar");
        NewRoomForm.add(miniBarLabel, new GridConstraints(4, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        escritorioLabel = new JLabel();
        escritorioLabel.setText("Escritorio");
        NewRoomForm.add(escritorioLabel, new GridConstraints(5, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        adornosLabel = new JLabel();
        adornosLabel.setText("Adornos");
        NewRoomForm.add(adornosLabel, new GridConstraints(3, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        AdornoscheckBox = new JCheckBox();
        AdornoscheckBox.setText("CheckBox");
        NewRoomForm.add(AdornoscheckBox, new GridConstraints(3, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        MiniBarcheckBox = new JCheckBox();
        MiniBarcheckBox.setText("CheckBox");
        NewRoomForm.add(MiniBarcheckBox, new GridConstraints(4, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        DeskcheckBox = new JCheckBox();
        DeskcheckBox.setText("CheckBox");
        NewRoomForm.add(DeskcheckBox, new GridConstraints(5, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        TelfcheckBox = new JCheckBox();
        TelfcheckBox.setText("CheckBox");
        NewRoomForm.add(TelfcheckBox, new GridConstraints(3, 2, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        LivingcheckBox = new JCheckBox();
        LivingcheckBox.setText("CheckBox");
        NewRoomForm.add(LivingcheckBox, new GridConstraints(4, 3, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        KitchencheckBox = new JCheckBox();
        KitchencheckBox.setText("CheckBox");
        NewRoomForm.add(KitchencheckBox, new GridConstraints(5, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(89, 24), null, 0, false));
        guardarButton = new JButton();
        guardarButton.setText("Guardar");
        NewRoomForm.add(guardarButton, new GridConstraints(6, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelarButton = new JButton();
        cancelarButton.setText("Cancelar");
        NewRoomForm.add(cancelarButton, new GridConstraints(6, 6, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return NewRoomForm;
    }
}
